@model IEnumerable<Insightly_project.Models.TaskItem>

@{
    ViewData["Title"] = "Tasks";
    Func<Insightly_project.Models.TaskStatus, string> statusClass = s =>
        s switch {
            Insightly_project.Models.TaskStatus.Pending => "badge-secondary",
            Insightly_project.Models.TaskStatus.InProgress => "badge-info",
            Insightly_project.Models.TaskStatus.Completed => "badge-success",
            _ => "badge-light"
        };
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0"><i class="bi bi-list-check"></i> Tasks</h2>
    @if (User.IsInRole("Admin"))
    {
        <a class="btn btn-success" asp-action="Create"><i class="bi bi-plus-circle"></i> New Task</a>
    }
</div>

<div class="card shadow-sm">
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead class="thead-light">
                    <tr>
                        <th>Title</th>
                        <th>Status</th>
                        <th>Due</th>
                        <th>Project</th>
                        <th>Assignees</th>
                        <th class="text-right">Actions</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    var isCompleted = item.Status == Insightly_project.Models.TaskStatus.Completed;
                    <tr>
                        <td>@item.Title</td>
                        <td><span class="badge @statusClass(item.Status)">@item.Status</span></td>
                        <td>@(item.DueDate?.ToString("yyyy-MM-dd") ?? "-")</td>
                        <td>@item.Project?.Name</td>
                        <td>
                            @{
                                var names = item.TaskItemUsers?.Select(tu => tu.User?.UserName).Where(n => !string.IsNullOrEmpty(n)).ToList() ?? new List<string>();
                            }
                            @(names.Count == 0 ? "-" : string.Join(", ", names))
                        </td>
                        <td class="text-right">
                            <div class="btn-group btn-group-sm" role="group">
                                <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.Id" data-toggle="tooltip" title="Details">
                                    <i class="bi bi-eye"></i>
                                </a>
                                @if (User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-outline-secondary" asp-action="Edit" asp-route-id="@item.Id" data-toggle="tooltip" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id" data-toggle="tooltip" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                }
                                else if (User.IsInRole("TeamMember") && !isCompleted)
                                {
                                    <form asp-action="SetStatus" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <input type="hidden" name="completed" value="true" />
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                        <button type="submit" class="btn btn-outline-success" data-toggle="tooltip" title="Mark Completed">
                                            <i class="bi bi-check2-circle"></i>
                                        </button>
                                    </form>
                                }
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
